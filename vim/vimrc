""" Coloring
let g:space_vim_dark_background = 234
syntax on
colorscheme space-vim-dark
highlight clear Comment
highlight Comment cterm=italic guifg=#7c7c7c
set number
set termguicolors


""" Other config
set encoding=UTF-8
set backspace=eol,start,indent
set whichwrap+=<,>,h,l
set ai " Autoindent
set si " Smartindent
" set smarttab
set wrap " Wrap lines
set tabstop=4 shiftwidth=4 
set tabstop=4
set softtabstop=4
set expandtab
set list listchars=tab:»·,trail:·,nbsp:·
set cursorline
set splitright


""" Optimisation config
set lazyredraw
set ttyfast
set foldmethod=syntax
set foldmethod=expr
set noshowcmd
set noruler


""" Mappings
" Better window switching
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l
" Better tab switching
map <C-t><left> :tabn<cr>
map <C-t><right> :tabN<cr>
nmap <leader>t :call ToggleTransparentMode()<CR>

"" Rebinds arrow keys to increase/decrease size of pane while in normal/visual mode
" Increase horizontal split
nnoremap <silent> <Up> :resize +2 <CR>
vnoremap <silent> <Up> :resize +2 <CR>
" Decrease horizontal split
nnoremap <silent> <Down> :resize -2 <CR>
vnoremap <silent> <Down> :resize -2 <CR>
" Increase vertical split
nnoremap <silent> <Left> :vertical resize -2 <CR>
vnoremap <silent> <Left> :vertical resize -2 <CR>
" Decrease horizontal split
nnoremap <silent> <Right> :vertical resize +2 <CR>
vnoremap <silent> <Right> :vertical resize +2 <CR>

""" Set transparency
function SetTransparentBackground()
    highlight Normal ctermbg=NONE guibg=NONE
    highlight LineNr ctermbg=NONE guibg=NONE
    highlight SignColumn ctermbg=NONE guibg=NONE
endfunction

function UnsetTransparentBackground()
    colorscheme space-vim-dark
endfunction

let s:transparent = 0
function ToggleTransparentMode()
    if s:transparent
        call UnsetTransparentBackground()
        let s:transparent = 0
    else
        call SetTransparentBackground()
        let s:transparent = 1
    endif
endfunction
